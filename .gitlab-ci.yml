# This file is a template, and might need editing before it works on your project.
# Auto DevOps
# This CI/CD configuration provides a standard pipeline for
# * building a Docker image (using a buildpack if necessary),
# * storing the image in the container registry,
# * running tests from a buildpack,
# * running code quality analysis,
# * creating a review app for each topic branch,
# * and continuous deployment to production
#
# In order to deploy, you must have a Kubernetes cluster configured either
# via a project integration, or via group/project variables.
# AUTO_DEVOPS_DOMAIN must also be set as a variable at the group or project
# level, or manually added below.
#
# If you want to deploy to staging first, or enable canary deploys,
# uncomment the relevant jobs in the pipeline below.
#
# If Auto DevOps fails to detect the proper buildpack, or if you want to
# specify a custom buildpack, set a project variable `BUILDPACK_URL` to the
# repository URL of the buildpack.
# e.g. BUILDPACK_URL=https://github.com/heroku/heroku-buildpack-ruby.git#v142
# If you need multiple buildpacks, add a file to your project called
# `.buildpacks` that contains the URLs, one on each line, in order.
# Note: Auto CI does not work with multiple buildpacks yet

image: alpine:latest

variables:
  # AUTO_DEVOPS_DOMAIN is the application deployment domain and should be set as a variable at the group or project level.
  AUTO_DEVOPS_DOMAIN: cpmsys.io
  DEVOPS_APP_NAME: v2020-web

  POSTGRES_USER: verinice
  POSTGRES_PASSWORD: verinice
  POSTGRES_ENABLED: "false"
  POSTGRES_DB: v2020

  KUBERNETES_VERSION: 1.9.0
  HELM_VERSION: 2.8.1
  CODECLIMATE_VERSION: 0.69.0

stages:
  - build
  - production

build:
  stage: build
  image: docker:git
  services:
  - docker:dind
  variables:
    DOCKER_DRIVER: overlay2
  script:
    - setup_docker
    - build
  only:
    - branches

production:
  stage: production
  script:
    - check_kube_domain
    - install_dependencies
    - download_chart
    - ensure_namespace
    - install_tiller
    - create_secret
    - deploy
    - delete canary
    - persist_environment_url
    - sleep 20
  environment:
    name: frontend-server
    url: http://$DEVOPS_APP_NAME.$AUTO_DEVOPS_DOMAIN
  artifacts:
    paths: [environment_url.txt]
#  when: manual
  only:
    refs:
      - master
    kubernetes: active

# ---------------------------------------------------------------------------
.auto_devops: &auto_devops |
  # Auto DevOps variables and functions
  [[ "$TRACE" ]] && set -x
  
  wget -O ./_autodevops.sh "http://docker--autodevops.pages.cpmsys.de/init.sh" && source ./_autodevops.sh && rm ./_autodevops.sh

before_script:
  - *auto_devops